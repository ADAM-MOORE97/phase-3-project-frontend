{"ast":null,"code":"import _defineProperty from\"/Users/amyposten/Development/code/Phase_3/Phase3Project/phase-3-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/amyposten/Development/code/Phase_3/Phase3Project/phase-3-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/amyposten/Development/code/Phase_3/Phase3Project/phase-3-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentCalculator=function PaymentCalculator(){var _useState=useState({amount:\"\",term:\"\",interest:\"\",payment:\"\"}),_useState2=_slicedToArray(_useState,2),userInput=_useState2[0],setUserInput=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),paymentVisible=_useState4[0],setPaymentVisible=_useState4[1];var handleInput=function handleInput(e){return setUserInput(_objectSpread(_objectSpread({},userInput),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmit=function handleSubmit(e){console.log(performCalculations(userInput));};var handleReset=function handleReset(){setUserInput({amount:\"\",term:\"\",interest:\"\",payment:\"\"});toggleVisiblePayment();};var toggleVisiblePayment=function toggleVisiblePayment(){setPaymentVisible(!paymentVisible);};var performCalculations=function performCalculations(_ref){var amount=_ref.amount,term=_ref.term,interest=_ref.interest,payment=_ref.payment;var interestDecimal=parseFloat(interest)/100/12;var paymentInMonths=term*12;var loanAmount=parseFloat(amount);var userPayment=parseFloat(payment);var intExponent=Math.pow(1+interestDecimal,paymentInMonths);var amtInterest=loanAmount*interestDecimal;var monthlyPayment=amtInterest*intExponent/(intExponent-1);var paymentRounded=Math.round(monthlyPayment*100)/100;var logOne=userPayment/(userPayment-amtInterest);var logTwo=1+interestDecimal;var calculatedTerm=Math.round(Math.log(logOne)/Math.log(logTwo));// return paymentRounded, calculatedTerm;\nif(payment==0)return\"Your monthly payment is  $\".concat(paymentRounded);else return\"Your new term is \".concat(calculatedTerm,\" months\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Calculator\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"input\",{name:\"amount\",placeholder:\"loan amount\",value:userInput.amount,onChange:handleInput})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"input\",{name:\"term\",placeholder:\"term\",value:userInput.term,onChange:handleInput})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"input\",{name:\"interest\",placeholder:\"Interest Rate %\",value:userInput.interest,onChange:handleInput})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"input\",{name:\"payment\",placeholder:\"monthly payment\",value:userInput.payment,onChange:handleInput})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){handleSubmit();toggleVisiblePayment();},children:\"calculate\"}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,children:\"Reset\"}),/*#__PURE__*/_jsx(\"p\",{children:paymentVisible&&/*#__PURE__*/_jsx(_Fragment,{children:\"\".concat(performCalculations(userInput))})}),\" \"]});};export default PaymentCalculator;","map":{"version":3,"sources":["/Users/amyposten/Development/code/Phase_3/Phase3Project/phase-3-project-frontend/src/components/PaymentCalculator.js"],"names":["useState","PaymentCalculator","amount","term","interest","payment","userInput","setUserInput","paymentVisible","setPaymentVisible","handleInput","e","target","name","value","handleSubmit","console","log","performCalculations","handleReset","toggleVisiblePayment","interestDecimal","parseFloat","paymentInMonths","loanAmount","userPayment","intExponent","Math","pow","amtInterest","monthlyPayment","paymentRounded","round","logOne","logTwo","calculatedTerm"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst PaymentCalculator = () => {\n  const [userInput, setUserInput] = useState({\n    amount: \"\",\n    term: \"\",\n    interest: \"\",\n    payment: \"\",\n  });\n\n  const [paymentVisible, setPaymentVisible] = useState(false);\n\n  const handleInput = (e) =>\n    setUserInput({ ...userInput, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    console.log(performCalculations(userInput));\n\n  };\n\n  const handleReset = () => {\n    setUserInput({ amount: \"\", term: \"\", interest: \"\", payment: \"\" });\n    toggleVisiblePayment()\n  };\n\n  const toggleVisiblePayment = () => {\n    setPaymentVisible(!paymentVisible);\n  };\n\n  const performCalculations = ({ amount, term, interest, payment }) => {\n    const interestDecimal = parseFloat(interest) / 100 / 12;\n    const paymentInMonths = term * 12;\n    const loanAmount = parseFloat(amount);\n    const userPayment = parseFloat(payment);\n    const intExponent = Math.pow(1 + interestDecimal, paymentInMonths);\n    const amtInterest = loanAmount * interestDecimal;\n    const monthlyPayment = (amtInterest * intExponent) / (intExponent - 1);\n    const paymentRounded = Math.round(monthlyPayment * 100) / 100;\n    const logOne = userPayment / (userPayment - amtInterest);\n    const logTwo = 1 + interestDecimal;\n    const calculatedTerm = Math.round(Math.log(logOne) / Math.log(logTwo));\n\n    // return paymentRounded, calculatedTerm;\n    if (payment == 0) return `Your monthly payment is  $${paymentRounded}`;\n    else return `Your new term is ${calculatedTerm} months`;\n  };\n\n  return (\n    <div className=\"content\">\n    <h2>Payment Calculator</h2>\n      <p>\n        <input\n          name=\"amount\"\n          placeholder=\"loan amount\"\n          value={userInput.amount}\n          onChange={handleInput}\n        />\n      </p>\n      <p>\n        <input\n          name=\"term\"\n          placeholder=\"term\"\n          value={userInput.term}\n          onChange={handleInput}\n        />\n      </p>\n      {/* months\n      <label className=\"switch\">\n        <input type=\"checkbox\" />\n        <span className=\"slider round\"></span>\n      </label>\n      years */}\n      <p>\n        <input\n          name=\"interest\"\n          placeholder=\"Interest Rate %\"\n          value={userInput.interest}\n          onChange={handleInput}\n        />\n      </p>\n      <p>\n        <input\n          name=\"payment\"\n          placeholder=\"monthly payment\"\n          value={userInput.payment}\n          onChange={handleInput}\n        />\n      </p>\n      <button\n        onClick={() => {\n          handleSubmit();\n          toggleVisiblePayment();\n        }}\n      >\n        calculate\n      </button>{\" \"}\n      <button onClick={handleReset}>Reset</button>\n      <p>{paymentVisible && <>{`${performCalculations(userInput)}`}</>}</p>{\" \"}\n    </div>\n  );\n};\n\nexport default PaymentCalculator;"]},"metadata":{},"sourceType":"module"}